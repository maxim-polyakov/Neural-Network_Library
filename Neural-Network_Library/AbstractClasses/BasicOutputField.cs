using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Neural_Network_Library
{
    public abstract class BasicOutputField : IOutputField
    {
        #region IOutputField Members

        /// <summary>
        /// Init this field for a new row.
        /// </summary>
        public abstract void RowInit();

        /// <summary>
        /// The numebr of fields that will actually be generated by 
        /// this field. For a simple field, this value is 1.
        /// </summary>
        public abstract int SubfieldCount { get; }

        /// <summary>
        /// Calculate the value for this field.  Specify subfield of zero
        /// if this is a simple field.
        /// </summary>
        /// <param name="subfield"> The subfield index.</param>
        /// <returns>The calculated value for this field.</returns>
        public abstract double Calculate(int subfield);

        /// <summary>
        /// Is this field part of the ideal data uses to train the
        /// neural network.
        /// </summary>
        public bool Ideal { get; set; }

        #endregion

        /// <summary>
        /// Calculate a ranged mapped value.
        /// </summary>
        /// <param name="value">The to map.</param>
        /// <param name="min">The minimum that the value param can be.</param>
        /// <param name="max">The maximum that the value param can be.</param>
        /// <param name="hi">The high value to map into.</param>
        /// <param name="lo">The low value to map into.</param>
        /// <returns>The mapped value.</returns>
        public static double Calculate(double value, double min,
                                       double max, double hi, double lo)
        {
            return ((value - min) / (max - min)) * (hi - lo) + lo;
        }
    }
}
